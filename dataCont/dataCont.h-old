/*
 * dataCont.h
 *
 *  Created on: 28/giu/2010
 *      Author: lovat
 */

#ifndef DATACONT_H_
#define DATACONT_H_

/*
 * Max length of ID's (in chars, including '\0')
 */
#define MAX_DATA_ID 20
#define MAX_CONT_ID 20

#include <stdio.h>
#include <stdlib.h>



/*
 *	DATA type declaration
 *
 *
 */
struct data_s;
struct cont_s;
struct list_of_data_s;
struct list_of_cont_s;

typedef struct data_s data_t;
typedef data_t* data_ptr;

typedef struct cont_s cont_t;
typedef cont_t* cont_ptr;

typedef struct list_of_data_s list_of_data_t;
typedef list_of_data_t* list_of_data_ptr;


typedef struct list_of_cont_s list_of_cont_t;
typedef list_of_cont_t* list_of_cont_ptr;



struct data_s{
	char* data_ID;
	list_of_cont_ptr contained;
};

data_ptr data_new(char* data_ID);
unsigned int data_free(data_ptr data, int mode);

data_ptr data_copy (data_ptr data);
unsigned int data_equals(data_ptr data1, data_ptr data2);

cont_ptr data_share(data_ptr data1, data_ptr data2);


/*
 *	LIST OF DATA type declaration
 *
 *
 */

struct list_of_data_s{
	data_ptr data;
	list_of_data_ptr prev;
	list_of_data_ptr next;
};

list_of_data_ptr list_of_data_new();
unsigned int list_of_data_free(list_of_data_ptr list_of_data, int mode);

unsigned int list_of_data_length(list_of_data_ptr list_of_data);

unsigned int list_of_data_add(list_of_data_ptr list_of_data, data_ptr data);

unsigned int list_of_data_remove(list_of_data_ptr* list_of_data, data_ptr data, int mode);

list_of_data_ptr list_of_data_append(list_of_data_ptr list_of_data_1, list_of_data_ptr list_of_data_2);

data_ptr list_of_data_find(list_of_data_ptr list_of_data, char* data);

/*
 *	CONTAINER type declaration
 *
 *
 */

struct cont_s{
	char* cont_ID;
	list_of_data_ptr contained;
};

cont_ptr cont_new(char* cont_ID);
unsigned int cont_free(cont_ptr cont, int mode);

cont_ptr cont_copy (cont_ptr cont);
unsigned int cont_equals(cont_ptr cont1, cont_ptr cont2);
data_ptr cont_share(cont_ptr cont1, cont_ptr cont2);


/*
 *	LIST OF CONTAINER type declaration
 *
 *
 */

struct list_of_cont_s{
	cont_ptr cont;
	list_of_cont_ptr prev;
	list_of_cont_ptr next;
};

list_of_cont_ptr list_of_cont_new();
unsigned int list_of_cont_free(list_of_cont_ptr list_of_cont, int mode);

unsigned int list_of_cont_length(list_of_cont_ptr list_of_cont);

unsigned int list_of_cont_add(list_of_cont_ptr list_of_cont, cont_ptr cont);

unsigned int list_of_cont_remove(list_of_cont_ptr* list_of_cont, cont_ptr cont, int mode);

cont_ptr list_of_cont_find(list_of_cont_ptr list_of_cont, char* cont);

list_of_cont_ptr list_of_cont_append (list_of_cont_ptr list_of_cont_1, list_of_cont_ptr list_of_cont_2);




/*
 *	DATA-CONTAINER MAPPING type declaration
 *
 *
 */

struct cont_alias_s;
struct cont_alias_list_s;
typedef struct cont_alias_s cont_alias_t;
typedef cont_alias_t *cont_alias_ptr;
typedef struct cont_alias_list_s cont_alias_list_t;
typedef cont_alias_list_t *cont_alias_list_ptr;


struct cont_alias_s{
  char *cont;
  cont_alias_list_ptr alias;
  cont_alias_ptr next;
};

struct cont_alias_list_s{
  char *cont;
  cont_alias_list_ptr next;
};

cont_alias_ptr cont_alias_new();
unsigned int cont_alias_add(cont_alias_ptr cont_alias, char* cont, char* alias);
unsigned int cont_alias_remove(cont_alias_ptr cont_alias, char* cont, char* alias);
void cont_alias_print(cont_alias_ptr cont_alias);















typedef struct dataCont_s{
	char*	data_ID_counter;
	char*	cont_ID_counter;

	list_of_data_ptr	data;
	list_of_cont_ptr	cont;

	cont_alias_ptr cont_alias;

}dataCont_t;

typedef dataCont_t *dataCont_ptr;










dataCont_ptr dataCont_new();
unsigned int dataCont_free(dataCont_ptr dataCont);

char* dataCont_getNewContID(dataCont_ptr dataCont);
char* dataCont_getNewDataID(dataCont_ptr dataCont);

unsigned int dataCont_newCont(dataCont_ptr dataCont, char* cont_ID);
unsigned int dataCont_newData(dataCont_ptr dataCont, char* data_ID);

unsigned int dataCont_updateContIDCounter(dataCont_ptr dataCont, char* cont_ID);
unsigned int dataCont_updateDataIDCounter(dataCont_ptr dataCont, char* data_ID);

unsigned int dataCont_addDataCont(dataCont_ptr dataCont, char* data, char* cont);
unsigned int dataCont_delDataCont(dataCont_ptr dataCont, char* data, char* cont);

unsigned int dataCont_addInitialCont(dataCont_ptr dataCont, char* contID);
unsigned int dataCont_appendContent(dataCont_ptr dataCont, char* cont_src, char* cont_dst);

list_of_data_ptr dataCont_getDataIn(dataCont_ptr dataCont, char* cont_ID);
list_of_cont_ptr dataCont_getContOf(dataCont_ptr dataCont, char* data_ID);

unsigned int dataCont_removeCont(dataCont_ptr dataCont, char* cont);

unsigned int dataCont_dataNum(dataCont_ptr dataCont);
unsigned int dataCont_contNum(dataCont_ptr dataCont);

data_ptr dataCont_cont_share(dataCont_ptr dataCont, char* cont1, char* cont2);
cont_ptr dataCont_data_share(dataCont_ptr dataCont, char* data1, char* data2);




void list_of_data_print(list_of_data_ptr lod, int mode);
void list_of_cont_print(list_of_cont_ptr loc, int mode);
void dataCont_print(dataCont_ptr dataCont, int mode);






#endif /* DATACONT_H_ */
