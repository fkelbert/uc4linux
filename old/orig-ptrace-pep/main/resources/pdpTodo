Denis:
  executeAction: setPairs -> rename to setParams

  PARAMETER_TYPE_XXX should be hex distinct! 
  -> possibility for combination, e.g. STRING | DATAUSAGE or INT | DATAUSAGE

########################################################################################################
- relative time interval working with "TIMESTEPS"?? (Berechnung korrekt?)

- Test Units
- clean after error

- mechanism is already added to subscriptions if parsing of authorization actions etc. failed!
  -> rollback required

- Fehlersuche:
  - synchronization problem:
    - sometimes this doesn't happen and application doesn't terminate (e.g. if update thread is created and called once):
      [2012-05-21 10:35:32][    threadUtils][TRACE] Deallocating mechanism mutex [pdpMutex]
      [2012-05-21 10:35:32][    threadUtils][TRACE] Mechanism mutex successfully deallocated.
      
  - segfault with calling pepSubscribe if incoming tcp port can not be bound???
  
- socket for pep/pxp stuff should not be in listening mode if one is used! otherwise blocking for the other purpose!
  -> entweder erst connect when benoetigt oder check, ob diese Kombination schon verwendet?!
  -> besser: Ueberpruefung, ob host,port kombination bereits von anderem Interface verwendet und einschraenken, dass Kombination nur von einem Interface verwendet werden darf! also trennung von PEP/PXP

- valgrind: testpdp w/ polKomplett.c:
  ==6882== Invalid read of size 4
  ==6882==    at 0x404C174: pdpInterfaceFree (pdpCommInterfaces.c:115)
  ==6882==    by 0x8049024: main (testpdp.c:147)
  ==6882==  Address 0x44c767c is 4 bytes inside a block of size 36 free'd
  ==6882==    at 0x40257ED: free (vg_replace_malloc.c:366)
  ==6882==    by 0x404C37A: pdpInterfaceFree (pdpCommInterfaces.c:143)
  ==6882==    by 0x410EC17: g_hash_table_remove_all_nodes (ghash.c:491)
  ==6882==    by 0x410F14C: g_hash_table_remove_all (ghash.c:1169)
  ==6882==    by 0x410F1FC: g_hash_table_destroy (ghash.c:876)
  ==6882==    by 0x40348A9: pdpStop (pdp.c:129)
  ==6882==    by 0x8048FE8: main (testpdp.c:146)  

- additional:
  - pdpInSocket
  - pdpInXmlrpc

- optimization: use internal method names for functions which are accessible using function pointers in structs
- optimization: use static char for EACH loglevel to avoid memory calculations?!
- optimization: different error codes indicating what went wrong (similar to errno.h; EBUSY, EINVAL, ...)


  
  
  
