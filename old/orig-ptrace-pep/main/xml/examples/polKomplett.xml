<?xml version="1.0" encoding="UTF-8"?>
<policySet 
  xmlns="http://www.iese.fhg.de/pef/1.0/enforcementLanguage"
  xmlns:tns="http://www.iese.fhg.de/pef/1.0/enforcementLanguage"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <actionDescriptions>
    <actionDescription name="syscall">
      <parameterDescription name="processId"/>
      <parameterDescription name="command"/>
      <parameterDescription name="username">
        <value>neisse</value>
        <value>moucha</value>
      </parameterDescription>
    </actionDescription>
    
    <actionDescription name="open">
      <parameterDescription name="path"/>
    </actionDescription>

    <actionDescription name="read" class="USAGE" />
    <actionDescription name="write" />
    <actionDescription name="unlink" />

    <actionDescription name="login" class="SIGNALLING">
      <parameterDescription name="result"/>
    </actionDescription>

    <actionDescription name="logout"/>

    <actionDescription name="log">
      <parameterDescription name="msg"/>
    </actionDescription>

    <actionDescription name="QueryDebtorRequest">
      <parameterDescription name="alreadyRequested"/>
    </actionDescription>
    
    <actionDescription name="Ack"/>
    
    <actionDescription name="Alarm"/>
    
  </actionDescriptions>
  
  	<contextDescriptions>
	  <context id="bsp" notify="true">
    <compose op='or'>
	    <comparator op='eq'>
		    <evaluator name='Location' function='isNear'>
			    <param name='location' value='49.431512;7.751831'/>
			    <param name='distance' value='100'/>
			    <param name='mindistance' value='50'/>
			    <param name='mintime' value='30000'/>
			    <param name='gps' value='true'/>
		    </evaluator>
		    <constant value='true' type='boolean'/>
	    </comparator>
	    <comparator op='eq'>
		    <evaluator name='Wireless' function='isConnectedTo'>
			    <param name='ssid' value='WLAN-gast'/>
		    </evaluator>
		    <constant value='true' type='boolean'/>
	    </comparator>
    </compose>	  
    </context>
  </contextDescriptions>

  <detectiveMechanism name="Detective1">
    <description>Alarm when not ack</description>
    <timestep amount="1" unit="MINUTES"/>
    <condition>
      <and>
        <before amount="6">
          <eventMatch action="QueryDebtorRequest">
            <paramMatch name="alreadyRequested" value="false"/>
          </eventMatch>
        </before>
        <not>
          <within amount="6">
            <eventMatch action="Ack"/>
          </within>
        </not>
      </and>
    </condition>
    <executeAction name="Alarm"/>
  </detectiveMechanism>

  <preventiveMechanism name="Preventive1">
    <description>Test of preventive mechanism1</description>
    <timestep amount="1" unit="SECONDS"/>
    <trigger action="open" isTry="true">
      <paramMatch name="path" value="/etc/passwd"/>
    </trigger>
    <!-- A complete condition that does not make
         any sense, but uses all operators. -->
  <condition>
    <not>
      <implies>
        <or>
          <or>
            <true/>
            <false/>
          </or>
          <or>
            <or>
              <always>
                <eventMatch action="login"/>
              </always>
              <before amount="3">
                <eventMatch action="login"/>
              </before>
            </or>
            <or>
              <since>
                <eventMatch action="login"/>
                <eventMatch action="logout"/>
              </since>
              <or>
                <during amount="3">
                  <eventMatch action="login"/>
                </during>
                <within amount="4">
                  <eventMatch action="logout"/>
                </within>
              </or>
            </or>
          </or>
        </or>
        <or>
          <xPathEval>//trigger/param[name='path']/@value = 'etc/passwd'</xPathEval>
          <or>
            <and>
              <repSince limit="1">
                <eventMatch action="open"/>
                <eventMatch action="unlink"/>
              </repSince>
              <repMax limit="0">
                <eventMatch action="unlink"/>
              </repMax>
            </and>
            <repLim amount="1" lowerLimit="3" upperLimit="5">
              <eventMatch action="read"/>
            </repLim>
          </or>
        </or>
      </implies>
    </not>
  </condition>
    <authorizationAction name="bla">
      <allow>
        <delay amount="1" unit="SECONDS"/>
        <modify>
          <parameter name="path" value="dev/null"/>
        </modify>
      </allow>
    </authorizationAction>
    <executeAction name="log">
      <parameter name="msg" value="Access to password file redirected to /dev/null."/>
    </executeAction>
  </preventiveMechanism>

  <preventiveMechanism name="Preventive2">
    <description>Test of preventive mechanism2</description>
    <timestep amount="1" unit="SECONDS"/>
    <trigger action="open">
      <paramMatch name="path" value="/etc/passwd"/>
    </trigger>
    <condition>
      <true/>
    </condition>
    <authorizationAction name="blubb">
      <inhibit>
        <delay amount="2" unit="SECONDS"/>
      </inhibit>
    </authorizationAction>
    <executeAction name="log">
      <parameter name="msg" value="Access to password file redirected to /dev/null."/>
    </executeAction>
  </preventiveMechanism>

</policySet>
