# components/pdp/SConscript
import os, sys
Import('env','curBaseDir')

logfiles = env.checkLogger(curBaseDir)

mechanismStatic = env.StaticLibrary('mechanism.c', CCFLAGS=env['CCFLAGS']+' -fPIC ')
Clean(mechanismStatic, logfiles['mechanism.c'])
env.Append(ESF_mechanism = mechanismStatic)

formulaStatic=env.StaticLibrary('formula.c', CCFLAGS=env['CCFLAGS']+' -fPIC ')
Clean(formulaStatic, logfiles['formula.c'])
env.Append(ESF_formula = formulaStatic)

if sys.platform == "win32":
	pdp=env.SharedLibrary('pdp.c', CCFLAGS=env['CCFLAGS']+' -D_JNI_PDP_ ', 
								   SHLINKFLAGS=env['ESFpdpjni'], LIBS=env['ESF_logger'] + env['ESF_action'] + 
													env['ESF_xmlUtils'] + env['ESF_strUtils'] + env['ESF_formula'] + env['ESF_mechanism'] +  
													env['ESF_timestamp'] + env['ESF_memUtils'] + env['ESF_esfevent'] + env['ESF_timeUtils'] + 
													env['ESF_dataCont'] + env['ESF_dataFlowMonitor'] + env['ESF_listOfEvents'] + 
													[File('/local/rd/lib/libxml2.a'),File('/local/rd/lib/libz.a')] + 
													#ws2_32 winsock2-library -> necessary for libxml2 (otherwise undefined references in included nanohttp)
													['glib-2.0','pthread','ole32','ws2_32'] + 
													[File('/local/rd/lib/libintl.a'),File('/local/rd/lib/libiconv.a')],
								   LIBPREFIX="",LIBSUFFIX="")
else:
	pdp=env.SharedLibrary('pdp.c', LIBS=env['ESF_logger'] + env['ESF_action'] + 
	                                    env['ESF_xmlUtils'] + env['ESF_strUtils'] + env['ESF_formula'] + env['ESF_mechanism'] +  
	                                    env['ESF_timestamp'] + env['ESF_memUtils'] + env['ESF_esfevent'] + env['ESF_timeUtils'] + 
										['glib-2.0','pthread','xml2'])
Depends(pdp, ['logger','esfevent','utilities',env.Alias('datacont')])
Clean(pdp, logfiles['pdp.c'])


#pdp_install = env.Install(env['ESFINSTALL'] + '/services/pdp', pdp)
#Clean(pdp, pdp_install)
#env.Alias('install', pdp_install)
#pdp_service=env.Command(env['ESFINSTALL']+'/services/pdp/services.xml', "pdp_service.xml",Copy("$TARGET", "$SOURCE"))
#Clean(pdp, pdp_service)
#env.Alias('install', pdp_service)

env.Alias('pdp', [mechanismStatic, formulaStatic, pdp])

