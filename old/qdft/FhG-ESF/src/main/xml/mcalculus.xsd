<?xml version="1.0" encoding="utf-8"?>

<!-- Created with Liquid XML Studio 1.0.8.0 (http://www.liquid-technologies.com) -->
<xs:schema xmlns="http://www.master-fp7.eu/mcalculus.xsd" 
  xmlns:e="http://www.iese.fhg.de/esf/1.0/event"
  elementFormDefault="qualified"
  targetNamespace="http://www.master-fp7.eu/mcalculus.xsd"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import schemaLocation="event-FhG.xsd" namespace="http://www.iese.fhg.de/esf/1.0/event" />
  <xs:element name="execute">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="reactiveProcess" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="reactiveMechanismMC">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element minOccurs="0" maxOccurs="1" name="trigger" type="e:EventType" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="execute" />
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" />
      <xs:attribute name="startTime" type="xs:dateTime" />
    </xs:complexType>
  </xs:element>
  <xs:element name="reactiveProcess">
    <xs:complexType>
      <xs:all>
        <xs:element ref="messages" />
        <xs:element ref="processes" />
      </xs:all>
    </xs:complexType>
  </xs:element>
  <xs:element name="messages">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="message" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="processes">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="process" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="message">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="type" type="xs:anyURI" />
        <xs:element minOccurs="0" name="format" type="xs:anyURI" />
        <xs:element name="payload">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" ref="element" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="id" type="xs:ID" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="element">
    <xs:complexType>
      <xs:attribute name="id" type="xs:string" use="required" />
      <xs:attribute name="type" type="xs:anyURI" />
      <xs:attribute name="format" type="xs:anyURI" />
    </xs:complexType>
  </xs:element>
  <xs:element name="process">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="1" ref="variables" />
        <xs:element minOccurs="0" maxOccurs="1" name="body">
          <xs:complexType>
            <xs:choice>
              <xs:element ref="sequence" />
              <xs:element ref="parallel" />
            </xs:choice>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="name" type="xs:ID" />
      <xs:attribute name="ref" type="xs:IDREF" />
    </xs:complexType>
  </xs:element>
  <xs:element name="variables">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="variable" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="variable">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="1" name="default" type="xs:string" />
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required" />
      <xs:attribute name="type" type="xs:anyURI" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:complexType name="structuredActivityType">
    <xs:sequence>
      <xs:choice minOccurs="1" maxOccurs="unbounded">
        <xs:element ref="sequence" />
        <xs:element ref="parallel" />
        <xs:element ref="send" />
        <xs:element ref="receive" />
        <xs:element ref="inputGuard" />
        <xs:element ref="dataGuard" />
        <xs:element ref="inputChoice" />
        <xs:element ref="dataChoice" />
        <xs:element ref="process" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="sequence" type="structuredActivityType" />
  <xs:element name="parallel" type="structuredActivityType" />
  <xs:complexType name="interactionType">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="content">
        <xs:complexType>
          <xs:attribute name="msgElement" type="xs:string" />
          <xs:attribute name="variable" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="messageRef" type="xs:IDREF" />
  </xs:complexType>
  <xs:element name="receive" type="interactionType" />
  <xs:element name="send" type="interactionType" />
  <xs:element name="inputGuard">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="receive" />
        <xs:element ref="sequence" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="inputChoice">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" maxOccurs="unbounded" ref="inputGuard" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="condition">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" maxOccurs="2" name="variable">
          <xs:complexType>
            <xs:attribute name="ref" type="xs:string" />
          </xs:complexType>
        </xs:element>
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
      <xs:attribute name="type" type="matchType" />
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="matchType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="match" />
      <xs:enumeration value="mismatch" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="dataGuard">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="condition" />
        <xs:element ref="sequence" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="dataChoice">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" maxOccurs="unbounded" ref="dataGuard" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>